# Global settings
# Refer: https://www.haproxy.com/blog/haproxy-ssl-termination/
global
        daemon
        log 127.0.0.1 local0
        log 127.0.0.1 local1 notice

        # Limiting Supported Versions of SSL
        ssl-default-bind-options ssl-min-ver TLSv1.2
        ssl-default-server-options ssl-min-ver TLSv1.2

        # Limiting Supported Certificates
        ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:TLS_AES_256_GCM_SHA384
        ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:TLS_AES_256_GCM_SHA384

# Proxies settings
## Defaults config
defaults
        mode    http
        option  forwardfor

        maxconn 2048 # limit max connection
        timeout connect         30s
        timeout client          30s
        timeout server          30s
        retries                 3

        log     global
        option  tcplog
        option  dontlognull
        option  redispatch

## Frontend config
frontend sslserver.gpcoder.com
        # Enabling SSL with HAProxy
        # Restrict (required/optional) who can access the application by giving trusted clients a certificate
        bind *:8443 ssl crt /certs/localhost.pem ca-file /certs/rootCA.pem verify required

        # Reject requests if site is dead
        acl site_dead nbsrv(backend_spring_ssl_server) lt 1
        tcp-request connection reject if site_dead

        # Whitelist Domain names and Paths
        # https://www.haproxy.com/blog/ssl-client-certificate-information-in-http-headers-and-logs/
        acl ssl_c_s_dn_is_valid ssl_c_s_dn(cn) -f /usr/local/etc/haproxy/haproxy-cn.lst
        http-request deny if !ssl_c_s_dn_is_valid !{ path -f /usr/local/etc/haproxy/haproxy-path.lst }

        # Forward requests to backend based on the domain name
        # acl host_gpcoder hdr_dom(host) -i  api-server.gpcoder.com
        # use_backend backend_gpcoder if host_gpcoder

        # Set headers: refer to https://www.haproxy.com/blog/ssl-client-certificate-information-in-http-headers-and-logs/
        # * ssl_fc: did the client used a secured connection (1) or not (0)
        #  * ssl_c_verify: the status code of the TLS/SSL client connection
        #  * ssl_c_s_dn: returns the full Distinguished Name of the certificate presented by the client
        #  * ssl_c_s_dn(cn): same as above, but extracts only the Common Name
        #  * ssl_c_i_dn: full distinguished name of the issuer of the certificate presented by the client
        #  * ssl_c_notbefore: start date presented by the client as a formatted string YYMMDDhhmmss
        #  * ssl_c_notafter: end date presented by the client as a formatted string YYMMDDhhmmss
        http-request set-header X-SSL                  %[ssl_fc]
        http-request set-header X-SSL-Client-Verify    %[ssl_c_verify]
        http-request set-header X-SSL-Client-DN        %{+Q}[ssl_c_s_dn]
        http-request set-header X-SSL-Client-CN        %{+Q}[ssl_c_s_dn(cn)]
        http-request set-header X-SSL-Issuer           %{+Q}[ssl_c_i_dn]
        http-request set-header X-SSL-Client-NotBefore %{+Q}[ssl_c_notbefore]
        http-request set-header X-SSL-Client-NotAfter  %{+Q}[ssl_c_notafter]

        # Forward requests to default backend
        default_backend backend_spring_ssl_server

## Backend config
backend backend_spring_ssl_server
        balance leastconn # roundrobin
        server spring_ssl_server_1 server-node-1:8080 weight 1 check
        server spring_ssl_server_2 server-node-2:8081 weight 1 check
        http-request set-header X-Forwarded-Port %[dst_port]
        http-request add-header X-Forwarded-Proto https if { ssl_fc }

## Statistics config
listen statistics
        bind *:8445
        stats enable
        stats admin if TRUE
        stats hide-version
        stats realm Haproxy\ Statistics
        stats uri /stats
        stats refresh 30s
        stats auth admin:haproxypwd123


